---
target_os: ubuntu
ansible_become: yes
ansible_user: david
ansible_python_interpreter: /usr/bin/python3


########################
###  dab-networking  ###
########################
network_interfaces:
  - name: ens18
    dhcp: true
    #ip: '192.168.1.200/24'
    #gateway: '192.168.1.1'
    #dns: '192.168.1.1'
    #domain: brooks.haus
    #mtu: 1500
  - name: ens19
    ip: '10.255.255.200/24'
    mtu: 9000


#############
###  ZFS  ###
#############
# NOTE: The pool(s) below should be created and imported.
# Frankly, not worth writing a whole role to do this, since any data on them
# shouldn't go away -- if we're reprovisioning a whole ZFS pool from scratch,
# something else has happened.
zfs_pools:
  - name: tank
    mountpoint: /mnt/tank


#####################
###  dab-storage  ###
#####################
main_storage_path: /mnt/storage  # where our stuff goes

## Disks used for storing bulk data (and merged via mergerfs)
data_disks:
  - mountpoint: /mnt/disk1
    diskbyid: scsi-SATA_WDC_WD10EZEX-00B_WD-WCC3FJF7M6TE
    fstype: xfs
    opts: defaults
    content: true
  - mountpoint: /mnt/disk2
    diskbyid: scsi-SATA_WDC_WD10EZEX-00B_WD-WCC3FMA2LTJY
    fstype: xfs
    opts: defaults
    content: true

## Disks used for snapraid parity
parity_disks:
  - mountpoint: /mnt/parity1
    diskbyid: scsi-SATA_ST1000DM010-2EP1_Z9AXXA1V
    fstype: xfs
    opts: defaults
    content: false

## Bind mount mappings for NFS sharing
bind_mounts:
  - mountpoint: /srv/nfs/vm-backups
    src: /mnt/tank/backups/vm

## NFS shares to be mounted
#nfs_mounts:
#  - mountpoint: /mnt/whatever
#    src: 10.255.255.200:/srv/nfs/whatever
#    opts: rw,sync,hard,intr

## MergerFS fstab - best to leave this as a list.
fstab_mergerfs:
  - mountpoint: "{{ main_storage_path }}"
    src: "/mnt/disk*"
    fstype: fuse.mergerfs
    opts:
        "defaults,nonempty,allow_other,use_ino,\
        cache.files=off,moveonenospc=true,\
        category.create=mfs,dropcacheonclose=true,\
        minfreespace=1G,fsname=mergerfs"


######################
###  bertvv.samba  ###
######################
samba_apple_extensions: yes
samba_guest_account: nobody
samba_load_homes: true               # share user homes
samba_log: /var/log/samba.log
samba_log_level: 1
samba_mitigate_cve_2017_7494: false  # unneeded for samba >4.6.4
samba_global_include: samba-global.conf
samba_shares:
  #- name: "homes"
  #  comment: "%U home directory"
  #  path: "/mnt/tank/home/%U"
  #  browseable: no
  #  read_only: no
  #  # writable: yes # writable for guests?
  #  # create_mode: 0600
  #  # directory_mode: 0700
  #  valid_users: "%S"
  #  guest_ok: no
  - name: media
    comment: A place for pirates.
    path: /mnt/tank/media
    public: false
    guest_ok: false
    writable: true
  - name: timemachine
    comment: MacOS backups.
    # This may make a literal "%U" directory to serve, vs. extrapolating to the Samba user.
    # Manually correcting the file and restarting the process can fix.  Not sure why.
    path: "/mnt/tank/backups/timemachine/%U"
    include_file: samba-timemachine.conf  # in master templates dir


######################
###  grog.package  ###
###################### 
package_list:
  - name: avahi-daemon
  - name: bash-completion
  - name: curl
  - name: fio
  - name: git
  - name: hddtemp
  - name: htop
  - name: iftop
  - name: iotop
  - name: mc
  - name: mergerfs
  - name: ncdu
  - name: net-tools
  - name: nfs-kernel-server
  - name: nmap
  - name: openssh-server
  - name: python
  - name: qemu-guest-agent  # Proxmox/QEMU
  #- name: open-vm-tools     # VMWare
  - name: samba
  #- name: sanoid           # ZFS snapshots
  - name: smartmontools
  - name: ssh-import-id
  - name: tmux
  - name: tree
  - name: wget
  - name: xfsprogs
  - name: zfsutils-linux


############################
###  geerlingguy.docker  ###
############################
docker_edition: "ce"
docker_compose_version: "1.28.4"
docker_users: 
  - david


#########################
###  geerlingguy.nfs  ###
#########################
nfs_exports:
  - "/srv/nfs               10.255.255.0/24(rw,sync,no_subtree_check,crossmnt,fsid=0)"
  - "/srv/nfs/media         10.255.255.0/24(rw,sync,no_subtree_check,crossmnt)"
  - "/srv/nfs/media/tv      10.255.255.0/24(rw,sync,no_subtree_check,sec=sys)"
  - "/srv/nfs/media/movies  10.255.255.0/24(rw,sync,no_subtree_check,sec=sys)"
  - "/mnt/tank/home         10.255.255.0/24(rw,sync,no_subtree_check,sec=sys)"
  - "/srv/nfs/vm-backups    10.255.255.0/24(rw,sync,no_subtree_check,sec=sys)"


############################################
###  ironicbadger.ansible_role_snapraid  ###
############################################
snapraid_email_address: dabrooks@outlook.com
snapraid_gmail_pass: "{{ snapraid_email_password }}"
snapraid_healthcheck_io_uuid: "{{ snapraid_healthcheck_secret }}"
snapraid_config_excludes:
  - "*.unrecoverable"
  - "/tmp/"
  - "/lost+found/"
  - "downloads/"
  - "appdata/"
  - "*.!sync"
  - ".AppleDouble"
  - "._AppleDouble"
  - ".DS_Store"
  - "._.DS_Store"
  - ".Thumbs.db"
  - ".fseventsd"
  - ".Spotlight-V100"
  - ".TemporaryItems"
  - ".Trashes"
  - ".AppleDB"

########################
###  sprat.snapraid  ###
########################
snapraid_data_disks:
  - name: disk1
    path: /mnt/disk1
    #smartctl_options: -d sat %s
  - name: disk2
    path: /mnt/disk2
  - name: disk3
    path: /mnt/disk3
  - name: disk4
    path: /mnt/disk4
  - name: disk5
    path: /mnt/disk5
snapraid_parity_disks:
  - path: /mnt/parity1
snapraid_content_files:
  - /mnt/disk1/snapraid.content
  - /mnt/disk2/snapraid.content
  - /mnt/disk3/snapraid.content
  - /mnt/disk4/snapraid.content
  - /mnt/disk5/snapraid.content
snapraid_excludes:
  - "*.unrecoverable"
  - "/tmp/"
  - "/lost+found/"
  - "downloads/"
  - "appdata/"
  - "*.!sync"
  - ".AppleDouble"
  - "._AppleDouble"
  - ".DS_Store"
  - "._.DS_Store"
  - ".Thumbs.db"
  - ".fseventsd"
  - ".Spotlight-V100"
  - ".TemporaryItems"
  - ".Trashes"
  - ".AppleDB"

