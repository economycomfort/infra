#!/usr/bin/env bash
#
{{ ansible_managed | comment }}
#
# Downloads and configures a VM from an Ubuntu cloud image.
# Installs packages, defines default hardware, and creates a template from the VM.
#
set -e

IMAGE="./jammy-server-cloudimg-amd64.img"
URL="https://cloud-images.ubuntu.com/jammy/current"
ID=9000     # Numeric ID to assign to created VM/template
PACKAGES=(  # Array of Ubuntu/Debian package names the created template should have pre-installed.
  qemu-guest-agent
  nfs-common
)

# Make sure this script is being run as root.
if [ ! $(id -u) = 0 ]; then
  echo "Please run this script as root, or with `sudo`."
  exit 1
fi

# Ensure required packages exist on the proxmox host prior to proceeding.
if [ ! $(dpkg -l | grep -q libguestfs-tools) ]; then
  echo "ERROR: libguestfs-tools is not installed on this host."
  echo "Install the package with 'apt update -y && apt install libguestfs-tools', then re-run this script."
  exit 1
fi

# Remove existing image in case last execution did not complete successfully
if [ -f ${IMAGE} ]; then 
  rm ${IMAGE}
fi
wget ${URL}/`basename ${IMAGE}`

# Patch the image with required packages
pkg_string=""
for i in ${PACKAGES[@]}; do
  pkg_string="${pkg_string} --install $i"
done
virt-customize -a ./${IMAGE} ${pkg_string}

# Create a VM from the image and set some options 
qm create ${ID} --name "ubuntu-template" \
  --memory 2048 --cores 2 \                     # 2GB RAM, 2 cores
  --net0 virtio,bridge=vmbr0,tag=69 \           # Primary network interface on vmbr0 (LAN)
  --net1 virtio,bridge=vmbr2                    # Secondary network interface on vmbr2 (storage)
qm importdisk ${ID} ./${IMAGE} local-lvm
qm set ${ID} --scsihw virtio-scsi-pci --scsi0 local-lvm:vm-9000-disk-0
qm set ${ID} --boot c --bootdisk scsi0
qm set ${ID} --ide2 local-lvm:cloudinit
qm set ${ID} --serial0 socket --vga serial0 # Creates a serial console instead of VGA
qm set ${ID} --agent enabled=1

# Templatize the VM
qm template ${ID}

# Remove unneeded cloud image
rm ./${IMAGE}

echo
echo "Ensure that cloud-init options are correct for the template (user, ssh keys, etc.)"
echo "Clone the VM, then expand the disk and set other hardware options."
