---
### Sets up initial networking.
### DEPRECATED:  This functionality is largely handled through cloud-init and terraform.

- name: Ensure correct hostname
  hostname:
    name: "{{ inventory_hostname }}"


# Ubuntu
- name: Remove Ubuntu default configuration
  command: 
    cmd: mv /etc/netplan/00-installer-config.yaml /etc/netplan/ORIG-installer-config.yaml
    removes: /etc/netplan/00-installer-config.yaml
  when: ansible_distribution == 'Ubuntu'

- name: Configure interfaces (Ubuntu)
  template:
    src: template-Ubuntu.j2
    dest: "/etc/netplan/10-{{ item.name }}.yaml"  
  notify: Restart networking (Ubuntu)
  loop: "{{ network_interfaces }}"
  when: ansible_distribution == 'Ubuntu'


# Debian
- name: Determining if original interface configuration exists (Debian)
  stat:
    path: /etc/network/interfaces
  register: st
  when: ansible_distribution == 'Debian'

- name: Copying original interface configuration for safekeeping (Debian)
  copy:
    src: /etc/network/interfaces
    dest: /etc/network/interfaces.bak
    remote_src: yes
  when: 
    - ansible_distribution == 'Debian'
    - st is defined
    - st.stat.exists == True

- name: Delete old interface configuration (Debian)
  file:
    path: /etc/network/interfaces
    state: absent
  when: ansible_distribution == 'Debian'

- name: Write new global interface configuration (Debian)
  template:
    src: template-Debian-global.j2
    dest: /etc/network/interfaces
  when: ansible_distribution == 'Debian'

- name: Write new interface configuration(s) (Debian)
  template:
    src: template-Debian.j2
    dest: "/etc/network/interfaces.d/{{ item.name }}"  
  notify: Restart networking (Debian)
  loop: "{{ network_interfaces }}"
  when: ansible_distribution == 'Debian'

- name: Configure nameservers (Debian)
  template:
    src: template-resolvconf.j2
    dest: /etc/resolv.conf
  when:
    - network_interfaces.dns is defined
    - ansible_distribution == 'Debian'
