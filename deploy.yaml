---
## Handles initial deployment and configuration of defined hosts.

  - hosts: all
    vars_files:
      - 'vars/vault.yaml'
    roles:
      #- dab-networking
      - dab-figurine
      #- dab-dotfiles
      #- dab-storage
    tasks:
     # Removes Ubuntu MOTD spam
     - name: Remove Ubuntu MOTD spam
       become: yes
       ansible.builtin.file:
         path: "/etc/update-motd.d/{{ item }}"
         state: absent
       loop:
         - 80-livepatch
         - 95-hwe-eol
         - 10-help-text
         - 50-motd-news
       when: ansible_distribution == "Ubuntu"

     - name: Remove Debian MOTD legalese
       become: yes
       ansible.builtin.file:
         path: "/etc/motd"
         state: absent
       when: ansible_distribution == "Debian" or ansible_distribution == "Kali"

  #################
  ###  proxmox  ###
  #################
  - hosts: proxmox
    tasks:
      # Passes through primary user to be able to log in to web interface.
      # Needs a user created (probably david) and passwordless sudo.
      - name: Add proxmox web interface users
        become: yes
        template:
          src: "proxmox/user.cfg.j2"  # relative to main playbook dir
          dest: "/etc/pve/user.cfg"
      
      # Copies shell script which eases cloud-init template creation    
      - name: Copy cloud-init template deployment script
        ansible.builtin.template:
          src: "proxmox/deploy-cloud-init-template.sh.j2"
          dest: "/root/deploy-cloud-init-template.sh"
          mode: 0744

    roles:
      #- role: grog.package
      - role: geerlingguy.ntp
      #- role: proxmox_nag_removal
      #- role: simoncaron.pve_addons
 
  ################
  ###  chunky  ###
  ################
  - hosts: chunky
    vars_files:
      - 'vars/vault.yaml'
    
    pre_tasks:
      # Seemingly not worth writing a whole role to manage ZFS on one host.
      # Ideally, just mount these pools manually before running playbook.
      # If all the datasets are gone from ZFS, there's bigger problems.
      - name: Ensure ZFS pool(s) are imported and mounted before proceeding
        ansible.builtin.command:
          cmd: "zpool list {{ item.name }} >/dev/null"
        loop: "{{ zfs_pools }}"
      
      # On the storage host, we're using an alternate path for /home.
      # The following tasks create a symlink for continuity.
      - name: Making sure /mnt/tank/home exists
        ansible.builtin.stat:
          path: /mnt/tank/home
        register: tankhome
      
      - name: Discovering facts about /home
        ansible.builtin.stat:
          path: /home
        register: oldhome
      
      # These commands must be combined; if not, our users $HOME will
      # be absent and subsequent SSH connections in the playbook will fail.
      - name: Move old /home out of the way and symlink /mnt/tank/home
        ansible.builtin.shell: 
          cmd: "mv /home /home.orig && ln -sf /mnt/tank/home /home"
        when: 
          - tankhome.stat.exists == True
          - oldhome.stat.islnk == False
    
    roles:
      - role: buluma.mount
      - role: grog.package
      - role: geerlingguy.docker
      - role: geerlingguy.nfs
      - role: vladgh.samba.server
    
    tasks:
      # Sanoid configuration for ZFS snapshots
      - name: Create /etc/sanoid directory
        ansible.builtin.file:
          path: /etc/sanoid
          state: directory
          mode: 0755

      - name: Copy sanoid configuration file
        ansible.builtin.template:
          src: sanoid.conf.j2
          dest: /etc/sanoid/sanoid.conf
          owner: root
          group: root
          mode: 0644

  #################
  ###  homebot  ###
  #################
  - hosts: homebot
    vars_files:
      - 'vars/vault.yaml'
    roles:
      - role: grog.package
      - role: geerlingguy.docker

  #################
  ###  sandbox  ###
  #################
  - hosts: sandbox
    tasks:
    roles:
      - role: grog.package

  ######################
  ###  Vectra Hosts  ###
  ######################
  - hosts: vectra
    tasks:
      - name: Ensure correct hostname
        ansible.builtin.hostname:
          name: "{{ inventory_hostname }}"
        become: yes
    roles:
